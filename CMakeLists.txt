CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

PROJECT("grpc-deliver" VERSION 1.0.0)

# RPM/DEB and CENTOS8/ROCKY9/UBU2204/UBU2404/AZURE3
IF (EXISTS "${CMAKE_CURRENT_BINARY_DIR}/OSRELEASE.txt")
	FILE(STRINGS ${CMAKE_CURRENT_BINARY_DIR}/OSRELEASE.txt OSRELEASE)
ELSEIF (EXISTS "/OSRELEASE.txt")
	FILE(STRINGS /OSRELEASE.txt OSRELEASE)
ELSE()
	MESSAGE(FATAL_ERROR "Missing OSRELEASE")
ENDIF()

IF (OSRELEASE MATCHES "CENTOS8")
	SET(CPACK_GENERATOR "RPM")
ELSEIF (OSRELEASE MATCHES "ROCKY9")
	SET(CPACK_GENERATOR "RPM")
ELSEIF (OSRELEASE MATCHES "UBU2204")
	SET(CPACK_GENERATOR "DEB")
ELSEIF (OSRELEASE MATCHES "UBU2404")
	SET(CPACK_GENERATOR "DEB")
ELSEIF (OSRELEASE MATCHES "AZURE3")
	SET(CPACK_GENERATOR "RPM")
ELSE()
	MESSAGE(FATAL_ERROR "Invalid OSRELEASE")
ENDIF()

SET(CMAKE_BUILD_TYPE Release)

# https://doc.rust-lang.org/rustc/codegen-options/index.html#relro-level
SET(RUSTFLAGS "-C relro-level=partial")

ADD_CUSTOM_TARGET(rust ALL
	COMMAND ${CMAKE_COMMAND} -E env RUSTFLAGS=${RUSTFLAGS} cargo build --release --target-dir ${CMAKE_CURRENT_BINARY_DIR}/target
	WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

IF(EXISTS "/etc/os-release")
	EXECUTE_PROCESS(COMMAND "sed" "-ne" "s/^ID=\"\\?\\([a-z]\\+\\)\"\\?$/\\1/p" "/etc/os-release" OUTPUT_VARIABLE OS_RELEASE_ID OUTPUT_STRIP_TRAILING_WHITESPACE)
	EXECUTE_PROCESS(COMMAND "sed" "-ne" "s/^VERSION_ID=\"\\?\\([0-9\\.]\\+\\)\"\\?$/\\1/p" "/etc/os-release" OUTPUT_VARIABLE OS_RELEASE_VERSION_ID OUTPUT_STRIP_TRAILING_WHITESPACE)
	EXECUTE_PROCESS(COMMAND "uname" "-m" OUTPUT_VARIABLE OS_RELEASE_ARCH OUTPUT_STRIP_TRAILING_WHITESPACE)
	SET(SYSTEM_NAME "${OS_RELEASE_ID}-${OS_RELEASE_VERSION_ID}-${OS_RELEASE_ARCH}")
ENDIF()

INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/target/release/libgrpc_deliver.so DESTINATION plugins RENAME grpc-deliver.so)
INSTALL(FILES grpc-deliver.schema.json DESTINATION share/plugins)

IF(${CMAKE_VERSION} VERSION_GREATER_EQUAL "3.14.0")
	FILE(CREATE_LINK "/opt/halon/plugins/grpc-deliver.so" "${CMAKE_CURRENT_BINARY_DIR}/grpc-deliver.so.link" SYMBOLIC)
ELSE()
	ADD_CUSTOM_TARGET(link_target ALL COMMAND ${CMAKE_COMMAND} -E create_symlink "/opt/halon/plugins/grpc-deliver.so" "${CMAKE_CURRENT_BINARY_DIR}/grpc-deliver.so.link")
ENDIF()

INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/grpc-deliver.so.link" DESTINATION plugins/autoload/smtpd RENAME grpc-deliver.so)

INSTALL(FILES "LICENSE" DESTINATION share/doc/plugins/grpc-deliver)

EXECUTE_PROCESS(COMMAND bash -c "cargo 3pl > ${CMAKE_CURRENT_BINARY_DIR}/LICENSE.thirdparty" WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/LICENSE.thirdparty" DESTINATION share/doc/plugins/grpc-deliver)

# SBOM
# "cargo cyclonedx" does not support custom output dir (it always end up in same place as Cargo.lock) so we set a unique name for each platform and copy it to binary dir manually
EXECUTE_PROCESS(COMMAND bash -c "cargo cyclonedx --format json --override-filename ${OSRELEASE}-sbom && cp ${OSRELEASE}-sbom.json ${CMAKE_CURRENT_BINARY_DIR} && rm ${OSRELEASE}-sbom.json" WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/${OSRELEASE}-sbom.json" DESTINATION share/sbom/plugins RENAME grpc-deliver.json)

SET(CMAKE_INSTALL_PREFIX "/opt/halon")
SET(CPACK_PACKAGING_INSTALL_PREFIX "/opt/halon")

IF (CPACK_GENERATOR MATCHES "DEB")
	SET(CPACK_DEBIAN_PACKAGE_DEPENDS "halon (>= 6.7)")
	SET(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "${CMAKE_CURRENT_SOURCE_DIR}/postinst;${CMAKE_CURRENT_SOURCE_DIR}/postrm")
ENDIF()
IF (CPACK_GENERATOR MATCHES "RPM")
	SET(CPACK_RPM_PACKAGE_REQUIRES "halon >= 6.7")
	SET(CPACK_RPM_POST_INSTALL_SCRIPT_FILE "${CMAKE_CURRENT_SOURCE_DIR}/postinst")
	SET(CPACK_RPM_POST_UNINSTALL_SCRIPT_FILE "${CMAKE_CURRENT_SOURCE_DIR}/postrm")
ENDIF()

SET(CPACK_PACKAGE_NAME "grpc-deliver")
SET(CPACK_PACKAGE_VERSION "${PROJECT_VERSION}")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "gRPC delivery plugin")
SET(CPACK_PACKAGE_DESCRIPTION "gRPC delivery plugin")
SET(CPACK_PACKAGE_CONTACT "Halon support@halon.io")
SET(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${PROJECT_VERSION}-${SYSTEM_NAME}")

SET(CPACK_DEBIAN_PACKAGE_SECTION "mail")

INCLUDE(CPack)
